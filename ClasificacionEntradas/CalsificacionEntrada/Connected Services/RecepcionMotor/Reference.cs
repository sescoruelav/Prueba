//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalsificacionEntrada.RecepcionMotor {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://motor", ConfigurationName="RecepcionMotor.WSRecepcionMotor")]
    public interface WSRecepcionMotor {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVersionReturn")]
        string getVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getVersionReturn")]
        System.Threading.Tasks.Task<string> getVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarRestriccionFechaCaducidadReturn")]
        bool comprobarRestriccionFechaCaducidad(int idPedidoPro, int idPedidoProlin, string fechaCaducidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarRestriccionFechaCaducidadReturn")]
        System.Threading.Tasks.Task<bool> comprobarRestriccionFechaCaducidadAsync(int idPedidoPro, int idPedidoProlin, string fechaCaducidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearEtiquetaTransitoMultiReferenciaReturn")]
        int crearEtiquetaTransitoMultiReferencia(string tipo, string leido, int idrecepcion, int idpedidopro, int idCarroMovil, string[] identificador, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearEtiquetaTransitoMultiReferenciaReturn")]
        System.Threading.Tasks.Task<int> crearEtiquetaTransitoMultiReferenciaAsync(string tipo, string leido, int idrecepcion, int idpedidopro, int idCarroMovil, string[] identificador, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarEntradaDirectaPreavisoRecepcionReturn")]
        object[] generarEntradaDirectaPreavisoRecepcion(int idRecepcion, int idHueco, string idExistenciaEstado, string[] identificador, bool sinMovimiento, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarEntradaDirectaPreavisoRecepcionReturn")]
        System.Threading.Tasks.Task<object[]> generarEntradaDirectaPreavisoRecepcionAsync(int idRecepcion, int idHueco, string idExistenciaEstado, string[] identificador, bool sinMovimiento, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarEntradaDirectaPreavisoCarroRecepcionReturn")]
        int generarEntradaDirectaPreavisoCarroRecepcion(int idRecepcion, int idHueco, string[] identificador, int idOperario, int idRecurso, string impresora);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarEntradaDirectaPreavisoCarroRecepcionReturn")]
        System.Threading.Tasks.Task<int> generarEntradaDirectaPreavisoCarroRecepcionAsync(int idRecepcion, int idHueco, string[] identificador, int idOperario, int idRecurso, string impresora);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearEtiquetaTransitoMultiReferenciaPReturn")]
        int crearEtiquetaTransitoMultiReferenciaP(string etiqueta, int idrecepcion, int idpedidopro, int idCarro, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearEtiquetaTransitoMultiReferenciaPReturn")]
        System.Threading.Tasks.Task<int> crearEtiquetaTransitoMultiReferenciaPAsync(string etiqueta, int idrecepcion, int idpedidopro, int idCarro, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDatosBDReturn")]
        string[] getDatosBD();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDatosBDReturn")]
        System.Threading.Tasks.Task<string[]> getDatosBDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getConteosPendientesReturn")]
        object[] getConteosPendientes(object[] filtros);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getConteosPendientesReturn")]
        System.Threading.Tasks.Task<object[]> getConteosPendientesAsync(object[] filtros);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void generarNuevaLineaRecepcion(int idpedidopro, int idpedidoprolin, int idarticulo, int cantidad, int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task generarNuevaLineaRecepcionAsync(int idpedidopro, int idpedidoprolin, int idarticulo, int cantidad, int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getArticuloRecepcionReturn")]
        object[] getArticuloRecepcion(string tipo, string leido, int idrecepcion, int idpedidopro);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getArticuloRecepcionReturn")]
        System.Threading.Tasks.Task<object[]> getArticuloRecepcionAsync(string tipo, string leido, int idrecepcion, int idpedidopro);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarPorcentajeReturn")]
        bool comprobarPorcentaje(int idPedido, int idArticulo, int cantidadAEntrar);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarPorcentajeReturn")]
        System.Threading.Tasks.Task<bool> comprobarPorcentajeAsync(int idPedido, int idArticulo, int cantidadAEntrar);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getArticuloRecepcionDesdeLineaReturn")]
        object[] getArticuloRecepcionDesdeLinea(string tipo, int idrecepcion, int idpedidopro, int idpedidoprolin);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getArticuloRecepcionDesdeLineaReturn")]
        System.Threading.Tasks.Task<object[]> getArticuloRecepcionDesdeLineaAsync(string tipo, int idrecepcion, int idpedidopro, int idpedidoprolin);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarMultiproductoReturn")]
        int generarMultiproducto(int idArticulo, int idHueco, string idPaletTipo, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarMultiproductoReturn")]
        System.Threading.Tasks.Task<int> generarMultiproductoAsync(int idArticulo, int idHueco, string idPaletTipo, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getResumenRecepcionReturn")]
        object[] getResumenRecepcion(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getResumenRecepcionReturn")]
        System.Threading.Tasks.Task<object[]> getResumenRecepcionAsync(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="confirmarMatriculaRAReturn")]
        bool confirmarMatriculaRA(int idEntrada, int idRecepcion, int idOperario, int idRecurso, int idTarea);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="confirmarMatriculaRAReturn")]
        System.Threading.Tasks.Task<bool> confirmarMatriculaRAAsync(int idEntrada, int idRecepcion, int idOperario, int idRecurso, int idTarea);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void modificarRecepcion(int idRecepcion, string muelle, string albaran, string observaciones, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task modificarRecepcionAsync(int idRecepcion, string muelle, string albaran, string observaciones, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarPeticionAtributosEANReturn")]
        int comprobarPeticionAtributosEAN(int idRecepcion, string EAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarPeticionAtributosEANReturn")]
        System.Threading.Tasks.Task<int> comprobarPeticionAtributosEANAsync(int idRecepcion, string EAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="impresionEtiquetasReturn")]
        bool impresionEtiquetas(int operario, int recurso, int articulo, int copias);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="impresionEtiquetasReturn")]
        System.Threading.Tasks.Task<bool> impresionEtiquetasAsync(int operario, int recurso, int articulo, int copias);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getArticulosRecepcionMultiReturn")]
        object[] getArticulosRecepcionMulti(string tipoRecepcion, int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getArticulosRecepcionMultiReturn")]
        System.Threading.Tasks.Task<object[]> getArticulosRecepcionMultiAsync(string tipoRecepcion, int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPresentacionesArticuloReturn")]
        object[] getPresentacionesArticulo(int idPresentacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPresentacionesArticuloReturn")]
        System.Threading.Tasks.Task<object[]> getPresentacionesArticuloAsync(int idPresentacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPedidosProveedorPendientesReturn")]
        object[] getPedidosProveedorPendientes(int modo, string[] filtros, string[] valores);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPedidosProveedorPendientesReturn")]
        System.Threading.Tasks.Task<object[]> getPedidosProveedorPendientesAsync(int modo, string[] filtros, string[] valores);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarPeticionAtributosReturn")]
        int comprobarPeticionAtributos(int idRecepcion, int idArticulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="comprobarPeticionAtributosReturn")]
        System.Threading.Tasks.Task<int> comprobarPeticionAtributosAsync(int idRecepcion, int idArticulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getResumenRecepcionEANReturn")]
        object[] getResumenRecepcionEAN(int idRecepcion, string EAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getResumenRecepcionEANReturn")]
        System.Threading.Tasks.Task<object[]> getResumenRecepcionEANAsync(int idRecepcion, string EAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarTareaRecepcionReturn")]
        int generarTareaRecepcion(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarTareaRecepcionReturn")]
        System.Threading.Tasks.Task<int> generarTareaRecepcionAsync(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isCerradaRecepcionReturn")]
        bool isCerradaRecepcion(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isCerradaRecepcionReturn")]
        System.Threading.Tasks.Task<bool> isCerradaRecepcionAsync(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cerrarRecepcionesMultipleReturn")]
        string cerrarRecepcionesMultiple(string json, string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cerrarRecepcionesMultipleReturn")]
        System.Threading.Tasks.Task<string> cerrarRecepcionesMultipleAsync(string json, string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="modificarRecepcionCabYLinReturn")]
        string modificarRecepcionCabYLin(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="modificarRecepcionCabYLinReturn")]
        System.Threading.Tasks.Task<string> modificarRecepcionCabYLinAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cumpleCondicionCierreReturn")]
        object[] cumpleCondicionCierre(string tipo, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cumpleCondicionCierreReturn")]
        System.Threading.Tasks.Task<object[]> cumpleCondicionCierreAsync(string tipo, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearRecepcionCabYLinReturn")]
        string crearRecepcionCabYLin(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearRecepcionCabYLinReturn")]
        System.Threading.Tasks.Task<string> crearRecepcionCabYLinAsync(string json);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarPreclasificacionEntradasReturn")]
        string generarPreclasificacionEntradas(string json, string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarPreclasificacionEntradasReturn")]
        System.Threading.Tasks.Task<string> generarPreclasificacionEntradasAsync(string json, string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void cerrarPedidoProveedor(int idPedidoPro, string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task cerrarPedidoProveedorAsync(int idPedidoPro, string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getEANdesdeSSCCReturn")]
        string getEANdesdeSSCC(string SSCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getEANdesdeSSCCReturn")]
        System.Threading.Tasks.Task<string> getEANdesdeSSCCAsync(string SSCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getEANconSSCCReturn")]
        object[] getEANconSSCC(string sscc, string ean);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getEANconSSCCReturn")]
        System.Threading.Tasks.Task<object[]> getEANconSSCCAsync(string sscc, string ean);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="estaOtroPedidoReturn")]
        bool estaOtroPedido(int idpedidopro, string SSCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="estaOtroPedidoReturn")]
        System.Threading.Tasks.Task<bool> estaOtroPedidoAsync(int idpedidopro, string SSCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarEntradaReturn")]
        int generarEntrada(
                    string tipo, 
                    string SSCC, 
                    int tipoEntrada, 
                    int cantidadPalet, 
                    int cantidadUnidad, 
                    int cantidadTotal, 
                    int idoperario, 
                    string idunidadtipo, 
                    string idpalettipo, 
                    string lote, 
                    string impresora, 
                    int muelle, 
                    int paletContenedor, 
                    int nEtiquetas, 
                    string nSerie, 
                    string ean, 
                    string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="generarEntradaReturn")]
        System.Threading.Tasks.Task<int> generarEntradaAsync(
                    string tipo, 
                    string SSCC, 
                    int tipoEntrada, 
                    int cantidadPalet, 
                    int cantidadUnidad, 
                    int cantidadTotal, 
                    int idoperario, 
                    string idunidadtipo, 
                    string idpalettipo, 
                    string lote, 
                    string impresora, 
                    int muelle, 
                    int paletContenedor, 
                    int nEtiquetas, 
                    string nSerie, 
                    string ean, 
                    string[] identificador);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="existeSSCCReturn")]
        bool existeSSCC(string SSCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="existeSSCCReturn")]
        System.Threading.Tasks.Task<bool> existeSSCCAsync(string SSCC);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="tratarTotalReturn")]
        int tratarTotal(
                    string eanLeido, 
                    int tipoEntrada, 
                    string tipoRecepcion, 
                    int idRecepcion, 
                    int idpedidopro, 
                    int linea, 
                    int idArticulo, 
                    int idCarro, 
                    int udsCaja, 
                    int cjsPalet, 
                    int udsTotales, 
                    string ean, 
                    string multi, 
                    string lote, 
                    string tipoPalet, 
                    string SSCC, 
                    bool igualTransito, 
                    object[] atributos, 
                    string nSerie, 
                    string idUnidadTipo, 
                    string idExistenciaEstado, 
                    bool cogerUnidadTipoArticulo, 
                    string[] identificador, 
                    int idOperario, 
                    int idRecurso, 
                    bool sinMovimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="tratarTotalReturn")]
        System.Threading.Tasks.Task<int> tratarTotalAsync(
                    string eanLeido, 
                    int tipoEntrada, 
                    string tipoRecepcion, 
                    int idRecepcion, 
                    int idpedidopro, 
                    int linea, 
                    int idArticulo, 
                    int idCarro, 
                    int udsCaja, 
                    int cjsPalet, 
                    int udsTotales, 
                    string ean, 
                    string multi, 
                    string lote, 
                    string tipoPalet, 
                    string SSCC, 
                    bool igualTransito, 
                    object[] atributos, 
                    string nSerie, 
                    string idUnidadTipo, 
                    string idExistenciaEstado, 
                    bool cogerUnidadTipoArticulo, 
                    string[] identificador, 
                    int idOperario, 
                    int idRecurso, 
                    bool sinMovimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="existeNSerieReturn")]
        bool existeNSerie(string nSerie);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="existeNSerieReturn")]
        System.Threading.Tasks.Task<bool> existeNSerieAsync(string nSerie);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void cerrarRecepcion(string tipo, int idRecepcion, int idpedidopro, string[] identificador, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task cerrarRecepcionAsync(string tipo, int idRecepcion, int idpedidopro, string[] identificador, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearRecepcionReturn")]
        object[] crearRecepcion(int idpedidopro, string muelle, string albaran, string matricula, string chofer, string observaciones, int modo, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="crearRecepcionReturn")]
        System.Threading.Tasks.Task<object[]> crearRecepcionAsync(int idpedidopro, string muelle, string albaran, string matricula, string chofer, string observaciones, int modo, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPedidosReturn")]
        object[] getPedidos(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getPedidosReturn")]
        System.Threading.Tasks.Task<object[]> getPedidosAsync(int idRecepcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isPrimeraEntradaReturn")]
        bool isPrimeraEntrada(int idpedidopro, int identrada);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isPrimeraEntradaReturn")]
        System.Threading.Tasks.Task<bool> isPrimeraEntradaAsync(int idpedidopro, int identrada);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getTareasRAReturn")]
        object[] getTareasRA(int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getTareasRAReturn")]
        System.Threading.Tasks.Task<object[]> getTareasRAAsync(int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getHuecoDefectoReturn")]
        string getHuecoDefecto();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getHuecoDefectoReturn")]
        System.Threading.Tasks.Task<string> getHuecoDefectoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void eliminarEntradas(int[] idEntrada, int idOperario);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task eliminarEntradasAsync(int[] idEntrada, int idOperario);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void cerrarDescarga(int idRecepcion, string[] identificador, int idOperario, int idRecurso);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task cerrarDescargaAsync(int idRecepcion, string[] identificador, int idOperario, int idRecurso);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSRecepcionMotorChannel : CalsificacionEntrada.RecepcionMotor.WSRecepcionMotor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSRecepcionMotorClient : System.ServiceModel.ClientBase<CalsificacionEntrada.RecepcionMotor.WSRecepcionMotor>, CalsificacionEntrada.RecepcionMotor.WSRecepcionMotor {
        
        public WSRecepcionMotorClient() {
        }
        
        public WSRecepcionMotorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSRecepcionMotorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSRecepcionMotorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSRecepcionMotorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getVersion() {
            return base.Channel.getVersion();
        }
        
        public System.Threading.Tasks.Task<string> getVersionAsync() {
            return base.Channel.getVersionAsync();
        }
        
        public bool comprobarRestriccionFechaCaducidad(int idPedidoPro, int idPedidoProlin, string fechaCaducidad) {
            return base.Channel.comprobarRestriccionFechaCaducidad(idPedidoPro, idPedidoProlin, fechaCaducidad);
        }
        
        public System.Threading.Tasks.Task<bool> comprobarRestriccionFechaCaducidadAsync(int idPedidoPro, int idPedidoProlin, string fechaCaducidad) {
            return base.Channel.comprobarRestriccionFechaCaducidadAsync(idPedidoPro, idPedidoProlin, fechaCaducidad);
        }
        
        public int crearEtiquetaTransitoMultiReferencia(string tipo, string leido, int idrecepcion, int idpedidopro, int idCarroMovil, string[] identificador, int idOperario, int idRecurso) {
            return base.Channel.crearEtiquetaTransitoMultiReferencia(tipo, leido, idrecepcion, idpedidopro, idCarroMovil, identificador, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task<int> crearEtiquetaTransitoMultiReferenciaAsync(string tipo, string leido, int idrecepcion, int idpedidopro, int idCarroMovil, string[] identificador, int idOperario, int idRecurso) {
            return base.Channel.crearEtiquetaTransitoMultiReferenciaAsync(tipo, leido, idrecepcion, idpedidopro, idCarroMovil, identificador, idOperario, idRecurso);
        }
        
        public object[] generarEntradaDirectaPreavisoRecepcion(int idRecepcion, int idHueco, string idExistenciaEstado, string[] identificador, bool sinMovimiento, int idOperario, int idRecurso) {
            return base.Channel.generarEntradaDirectaPreavisoRecepcion(idRecepcion, idHueco, idExistenciaEstado, identificador, sinMovimiento, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task<object[]> generarEntradaDirectaPreavisoRecepcionAsync(int idRecepcion, int idHueco, string idExistenciaEstado, string[] identificador, bool sinMovimiento, int idOperario, int idRecurso) {
            return base.Channel.generarEntradaDirectaPreavisoRecepcionAsync(idRecepcion, idHueco, idExistenciaEstado, identificador, sinMovimiento, idOperario, idRecurso);
        }
        
        public int generarEntradaDirectaPreavisoCarroRecepcion(int idRecepcion, int idHueco, string[] identificador, int idOperario, int idRecurso, string impresora) {
            return base.Channel.generarEntradaDirectaPreavisoCarroRecepcion(idRecepcion, idHueco, identificador, idOperario, idRecurso, impresora);
        }
        
        public System.Threading.Tasks.Task<int> generarEntradaDirectaPreavisoCarroRecepcionAsync(int idRecepcion, int idHueco, string[] identificador, int idOperario, int idRecurso, string impresora) {
            return base.Channel.generarEntradaDirectaPreavisoCarroRecepcionAsync(idRecepcion, idHueco, identificador, idOperario, idRecurso, impresora);
        }
        
        public int crearEtiquetaTransitoMultiReferenciaP(string etiqueta, int idrecepcion, int idpedidopro, int idCarro, int idOperario, int idRecurso) {
            return base.Channel.crearEtiquetaTransitoMultiReferenciaP(etiqueta, idrecepcion, idpedidopro, idCarro, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task<int> crearEtiquetaTransitoMultiReferenciaPAsync(string etiqueta, int idrecepcion, int idpedidopro, int idCarro, int idOperario, int idRecurso) {
            return base.Channel.crearEtiquetaTransitoMultiReferenciaPAsync(etiqueta, idrecepcion, idpedidopro, idCarro, idOperario, idRecurso);
        }
        
        public string[] getDatosBD() {
            return base.Channel.getDatosBD();
        }
        
        public System.Threading.Tasks.Task<string[]> getDatosBDAsync() {
            return base.Channel.getDatosBDAsync();
        }
        
        public object[] getConteosPendientes(object[] filtros) {
            return base.Channel.getConteosPendientes(filtros);
        }
        
        public System.Threading.Tasks.Task<object[]> getConteosPendientesAsync(object[] filtros) {
            return base.Channel.getConteosPendientesAsync(filtros);
        }
        
        public void generarNuevaLineaRecepcion(int idpedidopro, int idpedidoprolin, int idarticulo, int cantidad, int idRecepcion) {
            base.Channel.generarNuevaLineaRecepcion(idpedidopro, idpedidoprolin, idarticulo, cantidad, idRecepcion);
        }
        
        public System.Threading.Tasks.Task generarNuevaLineaRecepcionAsync(int idpedidopro, int idpedidoprolin, int idarticulo, int cantidad, int idRecepcion) {
            return base.Channel.generarNuevaLineaRecepcionAsync(idpedidopro, idpedidoprolin, idarticulo, cantidad, idRecepcion);
        }
        
        public object[] getArticuloRecepcion(string tipo, string leido, int idrecepcion, int idpedidopro) {
            return base.Channel.getArticuloRecepcion(tipo, leido, idrecepcion, idpedidopro);
        }
        
        public System.Threading.Tasks.Task<object[]> getArticuloRecepcionAsync(string tipo, string leido, int idrecepcion, int idpedidopro) {
            return base.Channel.getArticuloRecepcionAsync(tipo, leido, idrecepcion, idpedidopro);
        }
        
        public bool comprobarPorcentaje(int idPedido, int idArticulo, int cantidadAEntrar) {
            return base.Channel.comprobarPorcentaje(idPedido, idArticulo, cantidadAEntrar);
        }
        
        public System.Threading.Tasks.Task<bool> comprobarPorcentajeAsync(int idPedido, int idArticulo, int cantidadAEntrar) {
            return base.Channel.comprobarPorcentajeAsync(idPedido, idArticulo, cantidadAEntrar);
        }
        
        public object[] getArticuloRecepcionDesdeLinea(string tipo, int idrecepcion, int idpedidopro, int idpedidoprolin) {
            return base.Channel.getArticuloRecepcionDesdeLinea(tipo, idrecepcion, idpedidopro, idpedidoprolin);
        }
        
        public System.Threading.Tasks.Task<object[]> getArticuloRecepcionDesdeLineaAsync(string tipo, int idrecepcion, int idpedidopro, int idpedidoprolin) {
            return base.Channel.getArticuloRecepcionDesdeLineaAsync(tipo, idrecepcion, idpedidopro, idpedidoprolin);
        }
        
        public int generarMultiproducto(int idArticulo, int idHueco, string idPaletTipo, int idOperario, int idRecurso) {
            return base.Channel.generarMultiproducto(idArticulo, idHueco, idPaletTipo, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task<int> generarMultiproductoAsync(int idArticulo, int idHueco, string idPaletTipo, int idOperario, int idRecurso) {
            return base.Channel.generarMultiproductoAsync(idArticulo, idHueco, idPaletTipo, idOperario, idRecurso);
        }
        
        public object[] getResumenRecepcion(int idRecepcion) {
            return base.Channel.getResumenRecepcion(idRecepcion);
        }
        
        public System.Threading.Tasks.Task<object[]> getResumenRecepcionAsync(int idRecepcion) {
            return base.Channel.getResumenRecepcionAsync(idRecepcion);
        }
        
        public bool confirmarMatriculaRA(int idEntrada, int idRecepcion, int idOperario, int idRecurso, int idTarea) {
            return base.Channel.confirmarMatriculaRA(idEntrada, idRecepcion, idOperario, idRecurso, idTarea);
        }
        
        public System.Threading.Tasks.Task<bool> confirmarMatriculaRAAsync(int idEntrada, int idRecepcion, int idOperario, int idRecurso, int idTarea) {
            return base.Channel.confirmarMatriculaRAAsync(idEntrada, idRecepcion, idOperario, idRecurso, idTarea);
        }
        
        public void modificarRecepcion(int idRecepcion, string muelle, string albaran, string observaciones, int idOperario, int idRecurso) {
            base.Channel.modificarRecepcion(idRecepcion, muelle, albaran, observaciones, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task modificarRecepcionAsync(int idRecepcion, string muelle, string albaran, string observaciones, int idOperario, int idRecurso) {
            return base.Channel.modificarRecepcionAsync(idRecepcion, muelle, albaran, observaciones, idOperario, idRecurso);
        }
        
        public int comprobarPeticionAtributosEAN(int idRecepcion, string EAN) {
            return base.Channel.comprobarPeticionAtributosEAN(idRecepcion, EAN);
        }
        
        public System.Threading.Tasks.Task<int> comprobarPeticionAtributosEANAsync(int idRecepcion, string EAN) {
            return base.Channel.comprobarPeticionAtributosEANAsync(idRecepcion, EAN);
        }
        
        public bool impresionEtiquetas(int operario, int recurso, int articulo, int copias) {
            return base.Channel.impresionEtiquetas(operario, recurso, articulo, copias);
        }
        
        public System.Threading.Tasks.Task<bool> impresionEtiquetasAsync(int operario, int recurso, int articulo, int copias) {
            return base.Channel.impresionEtiquetasAsync(operario, recurso, articulo, copias);
        }
        
        public object[] getArticulosRecepcionMulti(string tipoRecepcion, int idRecepcion) {
            return base.Channel.getArticulosRecepcionMulti(tipoRecepcion, idRecepcion);
        }
        
        public System.Threading.Tasks.Task<object[]> getArticulosRecepcionMultiAsync(string tipoRecepcion, int idRecepcion) {
            return base.Channel.getArticulosRecepcionMultiAsync(tipoRecepcion, idRecepcion);
        }
        
        public object[] getPresentacionesArticulo(int idPresentacion) {
            return base.Channel.getPresentacionesArticulo(idPresentacion);
        }
        
        public System.Threading.Tasks.Task<object[]> getPresentacionesArticuloAsync(int idPresentacion) {
            return base.Channel.getPresentacionesArticuloAsync(idPresentacion);
        }
        
        public object[] getPedidosProveedorPendientes(int modo, string[] filtros, string[] valores) {
            return base.Channel.getPedidosProveedorPendientes(modo, filtros, valores);
        }
        
        public System.Threading.Tasks.Task<object[]> getPedidosProveedorPendientesAsync(int modo, string[] filtros, string[] valores) {
            return base.Channel.getPedidosProveedorPendientesAsync(modo, filtros, valores);
        }
        
        public int comprobarPeticionAtributos(int idRecepcion, int idArticulo) {
            return base.Channel.comprobarPeticionAtributos(idRecepcion, idArticulo);
        }
        
        public System.Threading.Tasks.Task<int> comprobarPeticionAtributosAsync(int idRecepcion, int idArticulo) {
            return base.Channel.comprobarPeticionAtributosAsync(idRecepcion, idArticulo);
        }
        
        public object[] getResumenRecepcionEAN(int idRecepcion, string EAN) {
            return base.Channel.getResumenRecepcionEAN(idRecepcion, EAN);
        }
        
        public System.Threading.Tasks.Task<object[]> getResumenRecepcionEANAsync(int idRecepcion, string EAN) {
            return base.Channel.getResumenRecepcionEANAsync(idRecepcion, EAN);
        }
        
        public int generarTareaRecepcion(int idRecepcion) {
            return base.Channel.generarTareaRecepcion(idRecepcion);
        }
        
        public System.Threading.Tasks.Task<int> generarTareaRecepcionAsync(int idRecepcion) {
            return base.Channel.generarTareaRecepcionAsync(idRecepcion);
        }
        
        public bool isCerradaRecepcion(int idRecepcion) {
            return base.Channel.isCerradaRecepcion(idRecepcion);
        }
        
        public System.Threading.Tasks.Task<bool> isCerradaRecepcionAsync(int idRecepcion) {
            return base.Channel.isCerradaRecepcionAsync(idRecepcion);
        }
        
        public string cerrarRecepcionesMultiple(string json, string[] identificador) {
            return base.Channel.cerrarRecepcionesMultiple(json, identificador);
        }
        
        public System.Threading.Tasks.Task<string> cerrarRecepcionesMultipleAsync(string json, string[] identificador) {
            return base.Channel.cerrarRecepcionesMultipleAsync(json, identificador);
        }
        
        public string modificarRecepcionCabYLin(string json) {
            return base.Channel.modificarRecepcionCabYLin(json);
        }
        
        public System.Threading.Tasks.Task<string> modificarRecepcionCabYLinAsync(string json) {
            return base.Channel.modificarRecepcionCabYLinAsync(json);
        }
        
        public object[] cumpleCondicionCierre(string tipo, int id) {
            return base.Channel.cumpleCondicionCierre(tipo, id);
        }
        
        public System.Threading.Tasks.Task<object[]> cumpleCondicionCierreAsync(string tipo, int id) {
            return base.Channel.cumpleCondicionCierreAsync(tipo, id);
        }
        
        public string crearRecepcionCabYLin(string json) {
            return base.Channel.crearRecepcionCabYLin(json);
        }
        
        public System.Threading.Tasks.Task<string> crearRecepcionCabYLinAsync(string json) {
            return base.Channel.crearRecepcionCabYLinAsync(json);
        }
        
        public string generarPreclasificacionEntradas(string json, string[] identificador) {
            return base.Channel.generarPreclasificacionEntradas(json, identificador);
        }
        
        public System.Threading.Tasks.Task<string> generarPreclasificacionEntradasAsync(string json, string[] identificador) {
            return base.Channel.generarPreclasificacionEntradasAsync(json, identificador);
        }
        
        public void cerrarPedidoProveedor(int idPedidoPro, string[] identificador) {
            base.Channel.cerrarPedidoProveedor(idPedidoPro, identificador);
        }
        
        public System.Threading.Tasks.Task cerrarPedidoProveedorAsync(int idPedidoPro, string[] identificador) {
            return base.Channel.cerrarPedidoProveedorAsync(idPedidoPro, identificador);
        }
        
        public string getEANdesdeSSCC(string SSCC) {
            return base.Channel.getEANdesdeSSCC(SSCC);
        }
        
        public System.Threading.Tasks.Task<string> getEANdesdeSSCCAsync(string SSCC) {
            return base.Channel.getEANdesdeSSCCAsync(SSCC);
        }
        
        public object[] getEANconSSCC(string sscc, string ean) {
            return base.Channel.getEANconSSCC(sscc, ean);
        }
        
        public System.Threading.Tasks.Task<object[]> getEANconSSCCAsync(string sscc, string ean) {
            return base.Channel.getEANconSSCCAsync(sscc, ean);
        }
        
        public bool estaOtroPedido(int idpedidopro, string SSCC) {
            return base.Channel.estaOtroPedido(idpedidopro, SSCC);
        }
        
        public System.Threading.Tasks.Task<bool> estaOtroPedidoAsync(int idpedidopro, string SSCC) {
            return base.Channel.estaOtroPedidoAsync(idpedidopro, SSCC);
        }
        
        public int generarEntrada(
                    string tipo, 
                    string SSCC, 
                    int tipoEntrada, 
                    int cantidadPalet, 
                    int cantidadUnidad, 
                    int cantidadTotal, 
                    int idoperario, 
                    string idunidadtipo, 
                    string idpalettipo, 
                    string lote, 
                    string impresora, 
                    int muelle, 
                    int paletContenedor, 
                    int nEtiquetas, 
                    string nSerie, 
                    string ean, 
                    string[] identificador) {
            return base.Channel.generarEntrada(tipo, SSCC, tipoEntrada, cantidadPalet, cantidadUnidad, cantidadTotal, idoperario, idunidadtipo, idpalettipo, lote, impresora, muelle, paletContenedor, nEtiquetas, nSerie, ean, identificador);
        }
        
        public System.Threading.Tasks.Task<int> generarEntradaAsync(
                    string tipo, 
                    string SSCC, 
                    int tipoEntrada, 
                    int cantidadPalet, 
                    int cantidadUnidad, 
                    int cantidadTotal, 
                    int idoperario, 
                    string idunidadtipo, 
                    string idpalettipo, 
                    string lote, 
                    string impresora, 
                    int muelle, 
                    int paletContenedor, 
                    int nEtiquetas, 
                    string nSerie, 
                    string ean, 
                    string[] identificador) {
            return base.Channel.generarEntradaAsync(tipo, SSCC, tipoEntrada, cantidadPalet, cantidadUnidad, cantidadTotal, idoperario, idunidadtipo, idpalettipo, lote, impresora, muelle, paletContenedor, nEtiquetas, nSerie, ean, identificador);
        }
        
        public bool existeSSCC(string SSCC) {
            return base.Channel.existeSSCC(SSCC);
        }
        
        public System.Threading.Tasks.Task<bool> existeSSCCAsync(string SSCC) {
            return base.Channel.existeSSCCAsync(SSCC);
        }
        
        public int tratarTotal(
                    string eanLeido, 
                    int tipoEntrada, 
                    string tipoRecepcion, 
                    int idRecepcion, 
                    int idpedidopro, 
                    int linea, 
                    int idArticulo, 
                    int idCarro, 
                    int udsCaja, 
                    int cjsPalet, 
                    int udsTotales, 
                    string ean, 
                    string multi, 
                    string lote, 
                    string tipoPalet, 
                    string SSCC, 
                    bool igualTransito, 
                    object[] atributos, 
                    string nSerie, 
                    string idUnidadTipo, 
                    string idExistenciaEstado, 
                    bool cogerUnidadTipoArticulo, 
                    string[] identificador, 
                    int idOperario, 
                    int idRecurso, 
                    bool sinMovimiento) {
            return base.Channel.tratarTotal(eanLeido, tipoEntrada, tipoRecepcion, idRecepcion, idpedidopro, linea, idArticulo, idCarro, udsCaja, cjsPalet, udsTotales, ean, multi, lote, tipoPalet, SSCC, igualTransito, atributos, nSerie, idUnidadTipo, idExistenciaEstado, cogerUnidadTipoArticulo, identificador, idOperario, idRecurso, sinMovimiento);
        }
        
        public System.Threading.Tasks.Task<int> tratarTotalAsync(
                    string eanLeido, 
                    int tipoEntrada, 
                    string tipoRecepcion, 
                    int idRecepcion, 
                    int idpedidopro, 
                    int linea, 
                    int idArticulo, 
                    int idCarro, 
                    int udsCaja, 
                    int cjsPalet, 
                    int udsTotales, 
                    string ean, 
                    string multi, 
                    string lote, 
                    string tipoPalet, 
                    string SSCC, 
                    bool igualTransito, 
                    object[] atributos, 
                    string nSerie, 
                    string idUnidadTipo, 
                    string idExistenciaEstado, 
                    bool cogerUnidadTipoArticulo, 
                    string[] identificador, 
                    int idOperario, 
                    int idRecurso, 
                    bool sinMovimiento) {
            return base.Channel.tratarTotalAsync(eanLeido, tipoEntrada, tipoRecepcion, idRecepcion, idpedidopro, linea, idArticulo, idCarro, udsCaja, cjsPalet, udsTotales, ean, multi, lote, tipoPalet, SSCC, igualTransito, atributos, nSerie, idUnidadTipo, idExistenciaEstado, cogerUnidadTipoArticulo, identificador, idOperario, idRecurso, sinMovimiento);
        }
        
        public bool existeNSerie(string nSerie) {
            return base.Channel.existeNSerie(nSerie);
        }
        
        public System.Threading.Tasks.Task<bool> existeNSerieAsync(string nSerie) {
            return base.Channel.existeNSerieAsync(nSerie);
        }
        
        public void cerrarRecepcion(string tipo, int idRecepcion, int idpedidopro, string[] identificador, int idOperario, int idRecurso) {
            base.Channel.cerrarRecepcion(tipo, idRecepcion, idpedidopro, identificador, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task cerrarRecepcionAsync(string tipo, int idRecepcion, int idpedidopro, string[] identificador, int idOperario, int idRecurso) {
            return base.Channel.cerrarRecepcionAsync(tipo, idRecepcion, idpedidopro, identificador, idOperario, idRecurso);
        }
        
        public object[] crearRecepcion(int idpedidopro, string muelle, string albaran, string matricula, string chofer, string observaciones, int modo, int idOperario, int idRecurso) {
            return base.Channel.crearRecepcion(idpedidopro, muelle, albaran, matricula, chofer, observaciones, modo, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task<object[]> crearRecepcionAsync(int idpedidopro, string muelle, string albaran, string matricula, string chofer, string observaciones, int modo, int idOperario, int idRecurso) {
            return base.Channel.crearRecepcionAsync(idpedidopro, muelle, albaran, matricula, chofer, observaciones, modo, idOperario, idRecurso);
        }
        
        public object[] getPedidos(int idRecepcion) {
            return base.Channel.getPedidos(idRecepcion);
        }
        
        public System.Threading.Tasks.Task<object[]> getPedidosAsync(int idRecepcion) {
            return base.Channel.getPedidosAsync(idRecepcion);
        }
        
        public bool isPrimeraEntrada(int idpedidopro, int identrada) {
            return base.Channel.isPrimeraEntrada(idpedidopro, identrada);
        }
        
        public System.Threading.Tasks.Task<bool> isPrimeraEntradaAsync(int idpedidopro, int identrada) {
            return base.Channel.isPrimeraEntradaAsync(idpedidopro, identrada);
        }
        
        public object[] getTareasRA(int idRecurso) {
            return base.Channel.getTareasRA(idRecurso);
        }
        
        public System.Threading.Tasks.Task<object[]> getTareasRAAsync(int idRecurso) {
            return base.Channel.getTareasRAAsync(idRecurso);
        }
        
        public string getHuecoDefecto() {
            return base.Channel.getHuecoDefecto();
        }
        
        public System.Threading.Tasks.Task<string> getHuecoDefectoAsync() {
            return base.Channel.getHuecoDefectoAsync();
        }
        
        public void eliminarEntradas(int[] idEntrada, int idOperario) {
            base.Channel.eliminarEntradas(idEntrada, idOperario);
        }
        
        public System.Threading.Tasks.Task eliminarEntradasAsync(int[] idEntrada, int idOperario) {
            return base.Channel.eliminarEntradasAsync(idEntrada, idOperario);
        }
        
        public void cerrarDescarga(int idRecepcion, string[] identificador, int idOperario, int idRecurso) {
            base.Channel.cerrarDescarga(idRecepcion, identificador, idOperario, idRecurso);
        }
        
        public System.Threading.Tasks.Task cerrarDescargaAsync(int idRecepcion, string[] identificador, int idOperario, int idRecurso) {
            return base.Channel.cerrarDescargaAsync(idRecepcion, identificador, idOperario, idRecurso);
        }
    }
}
