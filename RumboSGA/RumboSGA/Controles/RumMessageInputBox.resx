<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImagen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        7AAAAOwBeShxvQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAONSURBVFhH7Zbt
        S1NhGMb3IYL+jb4Efe0vKCqs6IXS+bLZnHNzUyfzXZdz6tRCJdMswndDpaZlVKZFusLshWmmwt4nhIXM
        9PQpCAquzvNsZ56zTjsLwi95ww+32/u+rmvPOdMj263dSrTW1tb2+T2ryoA7oIsHmSGzkbV/V35PsIcF
        CdITWaOVklK7Ny2jMJNFl5FRtD/STrw8ntUDrOiPGJN4/PT7/Qcj67J0ZWFSqsIIitI4FGlvF3t0h3y+
        4NE/4fUEX4mYxMXnDc5y+30D9hqzpQWExis3XpIe8aTm7HBb7PIO0kYCfOMan3pGsN5yE353IHbwN947
        V/DC8ZZCXovNJMA3EiDa2DSUg5FrEVhx84eieFx+3B2dhLmmHXpjvQDSs48+gdclHZ6PIEDQuYTVOadg
        gGNhfhmWus6ooaa6H6rmKWQ1P0GOuTvat9Z3/tWJyGyN1yFFna0DBaYGaqC22aG+sw7DA0aAeuQzsmuH
        6Uy+yQZr3TVRrVhk0a9HHDS51VRY1foU+vEtatj7jsGMl0HpxHYIlX0Tmeb+8Gx2GeSKAlE9PpIBFKoi
        KqitvIXc8W2zjyEGzFcGXW+2e4QT3Z+gLWphd2qRnGYQ1eQjGSBLW0kDXOx1C4w6XzF4tMLA9EgY4PTg
        FyQ3TNAdeUYeqxH/FCQD5BjCx6+xh6hBxSSD0UWhKZ8ztzdwsn2F7ijVxbgg14vqckgG0ObVUDHtvfC1
        Nz5kYH0mbk5I6t/AsZtBuqPSVOJcco6oLodkAI3eEj6BsQ1RQz7qsS0c7g4hqcMVPoGsEpxN1ojqckgG
        UGurwp+m3ydqyqFnOTWwQQOcvzxNd1LS83BerhPV5ZAMoFAVU7Hs6j7Bt4AP6ZNrT8yPdK1DU9JGd06d
        zWRvxHxRXQ7JAATuRkxvfIzUkU161Lr7W/QneX+8N0TND3eFkG6101lFVjENIKbHR1Za3gQpSsqaYCi0
        hYUtw+xNtho25EFuPOWlQTpTYGqCzlABo8kqqsdH8L8gHq/n5lFluUYNcgsb2L94A0itH0dq3TgumtnL
        w/bI76y2G5ieXsDSoldUJ5aEAxCWF10YGnmM0spWasanvOoqRseeY2ZmEcsfEjMnkADfY5vx8LmD7Kdz
        wzHjxOTkHKam3mD6+TxmZ5ew4HTBm8CzBI/vJMBwTHMnGZY5HI49AW/gHP/RekdgPYk3fS7crf+4ZLJf
        pK4God7mTQoAAAAASUVORK5CYII=
</value>
  </data>
</root>