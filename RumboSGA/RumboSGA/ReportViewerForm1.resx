<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="reportViewer1.AccessibilityKeyMap" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAEAQAAAKMCU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFy
        eWAyW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJh
        bCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1RlbGVyaWsuUmVwb3J0Vmlld2VyLkNv
        bW1vbi5BY2Nlc3NpYmlsaXR5LlNob3J0Y3V0S2V5cywgVGVsZXJpay5SZXBvcnRWaWV3ZXIuV2luRm9y
        bXMsIFZlcnNpb249MTUuMC4yMS4xMjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YTlk
        Nzk4M2RmY2MyNjFiZV1dBAAAAAdWZXJzaW9uCENvbXBhcmVyCEhhc2hTaXplDUtleVZhbHVlUGFpcnMA
        AwADCJEBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtb
        U3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
        YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQinAlN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmlj
        LktleVZhbHVlUGFpcmAyW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
        bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1RlbGVyaWsuUmVw
        b3J0Vmlld2VyLkNvbW1vbi5BY2Nlc3NpYmlsaXR5LlNob3J0Y3V0S2V5cywgVGVsZXJpay5SZXBvcnRW
        aWV3ZXIuV2luRm9ybXMsIFZlcnNpb249MTUuMC4yMS4xMjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
        S2V5VG9rZW49YTlkNzk4M2RmY2MyNjFiZV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJEBU3lzdGVt
        LkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLkludDMy
        LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
        PWI3N2E1YzU2MTkzNGUwODldXQAAAAAHAwAAAAABAAAABQAAAAOlAlN5c3RlbS5Db2xsZWN0aW9ucy5H
        ZW5lcmljLktleVZhbHVlUGFpcmAyW1tTeXN0ZW0uSW50MzIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1RlbGVy
        aWsuUmVwb3J0Vmlld2VyLkNvbW1vbi5BY2Nlc3NpYmlsaXR5LlNob3J0Y3V0S2V5cywgVGVsZXJpay5S
        ZXBvcnRWaWV3ZXIuV2luRm9ybXMsIFZlcnNpb249MTUuMC4yMS4xMjAsIEN1bHR1cmU9bmV1dHJhbCwg
        UHVibGljS2V5VG9rZW49YTlkNzk4M2RmY2MyNjFiZV1dDAUAAABkVGVsZXJpay5SZXBvcnRWaWV3ZXIu
        V2luRm9ybXMsIFZlcnNpb249MTUuMC4yMS4xMjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
        ZW49YTlkNzk4M2RmY2MyNjFiZQT8////pQJTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1
        ZVBhaXJgMltbU3lzdGVtLkludDMyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
        dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtUZWxlcmlrLlJlcG9ydFZpZXdl
        ci5Db21tb24uQWNjZXNzaWJpbGl0eS5TaG9ydGN1dEtleXMsIFRlbGVyaWsuUmVwb3J0Vmlld2VyLldp
        bkZvcm1zLCBWZXJzaW9uPTE1LjAuMjEuMTIwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
        PWE5ZDc5ODNkZmNjMjYxYmVdXQIAAAADa2V5BXZhbHVlAAQINlRlbGVyaWsuUmVwb3J0Vmlld2VyLkNv
        bW1vbi5BY2Nlc3NpYmlsaXR5LlNob3J0Y3V0S2V5cwUAAAANAAAABfr///82VGVsZXJpay5SZXBvcnRW
        aWV3ZXIuQ29tbW9uLkFjY2Vzc2liaWxpdHkuU2hvcnRjdXRLZXlzAQAAAAd2YWx1ZV9fAAgFAAAAAAAA
        AAH5/////P///0MAAAAB+P////r///8BAAAAAff////8////RAAAAAH2////+v///wIAAAAB9f////z/
        //9NAAAAAfT////6////AwAAAAHz/////P///1AAAAAB8v////r///8EAAAACw==
</value>
  </data>
</root>